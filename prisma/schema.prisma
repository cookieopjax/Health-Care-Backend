// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// 這是 Prisma 的 schema 檔案
// 用於定義資料庫結構和關聯
// 更多資訊請參考：https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  // 使用 PostgreSQL 資料庫
  url      = env("DATABASE_URL")  // 從環境變數讀取連接字串
}

// 使用者模型
model User {
  id            String          @id @default(uuid())  // 主鍵，使用 UUID
  username      String          @unique               // 使用者名稱，必須唯一
  email         String          @unique               // 電子郵件，必須唯一
  password      String                                // 密碼（需要加密存儲）
  createdAt     DateTime        @default(now())       // 建立時間，自動設定
  updatedAt     DateTime        @updatedAt            // 更新時間，自動更新
  mealRecords   MealRecord[]                         // 關聯到餐食紀錄
}

// 餐點類型枚舉
enum MealType {
  breakfast    // 早餐
  lunch        // 午餐
  dinner       // 晚餐
  snack        // 點心
}

// 整合後的餐食紀錄模型
model MealRecord {
  id          String    @id @default(uuid())         // 主鍵，使用 UUID
  userId      String                                 // 使用者 ID
  
  // 食物基本資訊
  foodName    String    @db.VarChar(100)            // 食物名稱
  description String?                                // 描述（選填）
  imageUrl    String?                                // 圖片 URL（選填）
  
  // 用餐資訊
  mealType    MealType                              // 餐點類型（早餐、午餐、晚餐、點心）
  notes       String?                                // 備註（選填）
  
  // 營養資訊
  calories    Int                                    // 卡路里
  protein     Float?                                 // 蛋白質（克）
  carbs       Float?                                 // 碳水化合物（克）
  fat         Float?                                 // 脂肪（克）
  fiber       Float?                                 // 膳食纖維（克）
  sugar       Float?                                 // 糖（克）
  sodium      Float?                                 // 鈉（毫克）
  
  // 時間資訊
  recordDate  DateTime  @db.Date                     // 記錄日期
  recordTime  DateTime  @db.Time()                   // 記錄時間
  createdAt   DateTime  @default(now())              // 建立時間
  updatedAt   DateTime  @updatedAt                   // 更新時間

  // 關聯設定
  user        User      @relation(fields: [userId], references: [id])

  // 索引設定
  @@index([userId, recordDate])                      // 複合索引：使用者 ID + 記錄日期
  @@index([recordDate])                              // 單一索引：日期
  @@index([foodName])                                // 食物名稱索引，方便搜尋
}
